# -*- mode: makefile-gmake -*-
OMAKE_SELF_PRINTDIR = $(MAKE) --print-directory
OS                  = $(shell uname)

-include $(PROJ_DIR)/user.mk

CXX       ?= clang++
CXXLINKER ?= clang++

ifeq ($(OS),Darwin)
  PROJ_ARCH             ?= arch-darwin-debug
  PROJ_LIB_SUFFIX        = dylib
  PROJ_LINKER_FLAGS_BASE = -shared -dynamiclib -Wl,-commons,use_dylibs,-bind_at_load
else
  PROJ_ARCH             ?= arch-linux-debug
  PROJ_LIB_SUFFIX        = so
  PROJ_LINKER_FLAGS_BASE = -shared
endif

PROJ_VERSION     = 0.0.1
PROJ_SRC_DIR     = $(PROJ_DIR)/src
PROJ_INCLUDE_DIR = $(PROJ_DIR)/include
PROJ_BUILD_DIR   = $(PROJ_DIR)/$(PROJ_ARCH)
PROJ_OBJ_DIR     = $(PROJ_BUILD_DIR)/obj
PROJ_LIB_DIR     = $(PROJ_BUILD_DIR)/lib

PROJ_LIB_BASE       = lib$(PROJ_NAME)
PROJ_LONG_LIB_NAME  = $(PROJ_LIB_BASE).$(PROJ_VERSION).$(PROJ_LIB_SUFFIX)
PROJ_SHORT_LIB_NAME = -l$(PROJ_NAME)
PROJ_LIB_NAME       = $(PROJ_LIB_BASE).$(PROJ_LIB_SUFFIX)

PROJ_INCLUDE_PATHS = -I$(PROJ_INCLUDE_DIR)
PROJ_LIB_PATHS     = -L$(PROJ_LIB_DIR) -Wl,-rpath,$(PROJ_LIB_DIR)
PROJ_LIBS          = -lstdc++

PROJ_CXXFLAGS     ?= -Wall -fPIC -fvisibility=hidden -fdiagnostics-show-template-tree -fsanitize=address -g -std=gnu++17
PROJ_LINKER_FLAGS ?= $(PROJ_LINKER_FLAGS_BASE) -fsanitize=address
PROJ_CXX_DEPFLAGS  = -MMD -MP -MF $(PROJ_OBJ_DIR)/$*.d

# this is a hack to support relpath as not all (i.e. macos) ship with it
# usage: $(RELPATH FILE BASE)
RELPATH = $(shell perl -e 'use File::Spec; print File::Spec->abs2rel(@ARGV) . "\n"' $(1) $(2))

ifeq ($(V),)
  quiet_HELP := "Use \"$(MAKE) V=1\" to see the verbose compile lines.\n"
  quiet = @printf $(quiet_HELP)$(eval quiet_HELP:=)"  %10s %s\n" "$1$2" "$(call RELPATH,$@,$(PROJ_DIR))"; $($1)
else ifeq ($(V),0) # Same, but do not print any help
  quiet = @printf "  %10s %s\n" "$1$2" "$@"; $($1)
else               # Show the full command line
  quiet = $($1)
endif

PROJ_COMPILE_CXX_SINGLE = $(call quiet,CXX) $(PROJ_CXXPPFLAGS) $(CXXPPFLAGS) $(PROJ_CXXFLAGS) $(CXXFLAGS) $(PROJ_INCLUDE_PATHS) $(PROJ_CXX_DEPFLAGS)
PROJ_LINK_CXX_SINGLE    = $(call quiet,CXXLINKER) $(PROJ_CXXFLAGS) $(CXXFLAGS) $(PROJ_LINKER_FLAGS) $(PROJ_LIB_PATHS) $(LDFLAGS)
